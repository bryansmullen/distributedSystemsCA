// syntax declaration
syntax = "proto3";

// java options
option java_multiple_files = true;
option java_package = "com.bryanmullen.milkingService";
option java_outer_classname = "MilkingPackage";

// package
package milkingService;

// messages

message MilkCollectionRequest{}
message MilkCollectionResponse {}
message MilkProductionRequest{}
message MilkProductionResponse {}
message MilkCurrentCowRequest{}
message MilkCurrentCowResponse {}

// services
service MilkingService {
  // This method should be able to represent the total milk currently
  // collected in the collection unit relative to the capacity, to give an
  // indication of when the unit is full.This method will be implemented
  // using Server Streaming.
  rpc milkCollection(MilkCollectionRequest) returns (stream
      MilkCollectionResponse){}

  // This method should be able to log the milk produced by the current
  // milking session against a particular cow, based on the ID of the current
  // cow. It should calculate the volume of milk by comparing the current
  // total collection against the last logged value and calculating the
  // difference.This method will be implemented using Unary Method.
  rpc milkProduction(MilkProductionRequest) returns (
      MilkProductionResponse){}

  // This method should be capable of returning the ID of the current cow
  // being milked. This method will be implemented using Server Streaming.
  rpc milkCurrentCow(MilkCurrentCowRequest) returns (stream
      MilkCurrentCowResponse){}
}



